; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Node2D",
"class": "BaseRole",
"language": "GDScript",
"path": "res://Role/BaseRole.gd"
}, {
"base": "Node",
"class": "BaseState",
"language": "GDScript",
"path": "res://Role/Skill/BaseState.gd"
}, {
"base": "Reference",
"class": "DTS",
"language": "GDScript",
"path": "res://addons/dialogic/Localization/translation_service.gd"
}, {
"base": "Node",
"class": "Dialogic",
"language": "GDScript",
"path": "res://addons/dialogic/Other/DialogicClass.gd"
}, {
"base": "Control",
"class": "DialogicBackgroundMusic",
"language": "GDScript",
"path": "res://addons/dialogic/Nodes/BackgroundMusic.gd"
}, {
"base": "Node",
"class": "DialogicCustomEvents",
"language": "GDScript",
"path": "res://addons/dialogic/Nodes/DialogicCustomEvents.gd"
}, {
"base": "Node",
"class": "DialogicDefinitionsUtil",
"language": "GDScript",
"path": "res://addons/dialogic/Other/DialogicDefinitionsUtil.gd"
}, {
"base": "Node",
"class": "DialogicParser",
"language": "GDScript",
"path": "res://addons/dialogic/Parser/DialogicParser.gd"
}, {
"base": "Reference",
"class": "DialogicResources",
"language": "GDScript",
"path": "res://addons/dialogic/Other/DialogicResources.gd"
}, {
"base": "Reference",
"class": "DialogicUtil",
"language": "GDScript",
"path": "res://addons/dialogic/Other/DialogicUtil.gd"
}, {
"base": "Node",
"class": "GodotHttp",
"language": "GDScript",
"path": "res://Http/HttpBase.gd"
}, {
"base": "Reference",
"class": "GodotNakamaClient",
"language": "GDScript",
"path": "res://Http/NakamaClient.gd"
}, {
"base": "Reference",
"class": "HeroAttrBean",
"language": "GDScript",
"path": "res://Bean/HeroAttrBean.gd"
}, {
"base": "Node",
"class": "HurtSkill",
"language": "GDScript",
"path": "res://Role/Skill/HurtSkill.gd"
}, {
"base": "Reference",
"class": "NakamaAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaAPI.gd"
}, {
"base": "Reference",
"class": "NakamaAsyncResult",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaAsyncResult.gd"
}, {
"base": "Reference",
"class": "NakamaClient",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaClient.gd"
}, {
"base": "Reference",
"class": "NakamaException",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaException.gd"
}, {
"base": "Node",
"class": "NakamaHTTPAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaHTTPAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaLogger",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaLogger.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaRTAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTAPI.gd"
}, {
"base": "Reference",
"class": "NakamaRTMessage",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTMessage.gd"
}, {
"base": "Reference",
"class": "NakamaSerializer",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaSerializer.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaSession",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaSession.gd"
}, {
"base": "Reference",
"class": "NakamaSocket",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocket.gd"
}, {
"base": "Node",
"class": "NakamaSocketAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocketAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaStorageObjectId",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaStorageObjectId.gd"
}, {
"base": "Reference",
"class": "NakamaWriteStorageObject",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaWriteStorageObject.gd"
}, {
"base": "Node",
"class": "SkillEntity",
"language": "GDScript",
"path": "res://Bean/SkillBean.gd"
}, {
"base": "Reference",
"class": "SkillHurtBean",
"language": "GDScript",
"path": "res://Bean/SkillHurtBean.gd"
}, {
"base": "Node",
"class": "SkillItemBean",
"language": "GDScript",
"path": "res://Bean/SkillItemBean.gd"
}, {
"base": "Reference",
"class": "SkillStateBean",
"language": "GDScript",
"path": "res://Bean/SkillStateBean.gd"
} ]
_global_script_class_icons={
"BaseRole": "",
"BaseState": "",
"DTS": "",
"Dialogic": "",
"DialogicBackgroundMusic": "",
"DialogicCustomEvents": "",
"DialogicDefinitionsUtil": "",
"DialogicParser": "",
"DialogicResources": "",
"DialogicUtil": "",
"GodotHttp": "",
"GodotNakamaClient": "",
"HeroAttrBean": "",
"HurtSkill": "",
"NakamaAPI": "",
"NakamaAsyncResult": "",
"NakamaClient": "",
"NakamaException": "",
"NakamaHTTPAdapter": "",
"NakamaLogger": "",
"NakamaRTAPI": "",
"NakamaRTMessage": "",
"NakamaSerializer": "",
"NakamaSession": "",
"NakamaSocket": "",
"NakamaSocketAdapter": "",
"NakamaStorageObjectId": "",
"NakamaWriteStorageObject": "",
"SkillEntity": "",
"SkillHurtBean": "",
"SkillItemBean": "",
"SkillStateBean": ""
}

[application]

config/name="wh"
run/main_scene="res://UI/CheckUpdate.tscn"
config/icon="res://logo.png"
config/windows_native_icon="res://bitbug_favicon.ico"
config/quit_on_go_back=false

[autoload]

Nakama="*res://addons/com.heroiclabs.nakama/Nakama.gd"
ConfigScript="*res://Storage/ConfigScript.gd"
ConstantsValue="*res://AutoLoad/ConstantsValue.gd"
StorageData="*res://Storage/StorageData.gd"
Utils="*res://AutoLoad/Utils.gd"
LocalData="*res://Storage/LocalData.gd"
EquUtils="*res://AutoLoad/EquUtils.gd"
HeroAttrUtils="*res://Storage/HeroAttrUtils.gd"
GoodsUtils="*res://AutoLoad/GoodsUtils.gd"

[debug]

settings/fps/force_fps=144

[display]

window/size/width=1344
window/size/height=621
mouse_cursor/tooltip_position_offset=Vector2( 0, 0 )
window/stretch/mode="2d"
window/stretch/aspect="keep"

[editor_plugins]

enabled=PoolStringArray( "res://addons/dialogic/plugin.cfg" )

[input]

quentincaffeino_console_toggle={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":true,"meta":false,"command":true,"pressed":false,"scancode":96,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
quentincaffeino_console_autocomplete={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777218,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
quentincaffeino_console_history_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777232,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
quentincaffeino_console_history_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777234,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":68,"unicode":0,"echo":false,"script":null)
 ]
}
jump={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":32,"unicode":0,"echo":false,"script":null)
 ]
}

[input_devices]

pointing/emulate_touch_from_mouse=true

[physics]

common/enable_pause_aware_picking=true

[rendering]

vram_compression/import_etc=true
quality/voxel_cone_tracing/high_quality=true
quality/depth/hdr.mobile=true
environment/default_environment="res://default_env.tres"
